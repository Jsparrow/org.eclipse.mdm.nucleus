/*******************************************************************************
 * Copyright (c) 2016 Gigatronik Ingolstadt GmbH
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * Sebastian Dirsch - initial configuration
 *******************************************************************************/ 

import org.apache.tools.ant.taskdefs.condition.Os
description = 'MDM Web Application'
version = '1.0.0'
apply plugin: 'com.moowork.node'

System.setProperty('file.encoding', 'UTF-8')

dependencies {
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.15'
	compile 'com.sun.jersey:jersey-json:1.19.1'
	compile project(':org.eclipse.mdm.businessobjects')
	compile project(':org.eclipse.mdm.filerelease')
	compile project(':org.eclipse.mdm.property')	
}

buildscript {
	repositories { 
		maven { 
			url "https://plugins.gradle.org/m2/" 
		} 
	}
	dependencies { 
		classpath "com.moowork.gradle:gradle-node-plugin:0.12" 
	}
}


task copy_websources(type: Copy) {

	from './src/main/webapp'	
	into "${project.buildDir}/node"
}


node {
	version = '4.3.2'
	npmVersion = '3.9.2'
	distBaseUrl = 'https://nodejs.org/dist'
	download = true
	workDir = file("${project.buildDir}/node/nodejs")
	nodeModulesDir = file("${project.buildDir}/node")
	if (!nodeModulesDir.isDirectory()) {
		nodeModulesDir.mkdirs()
	}
}

task webpack(type: NodeTask) {
  	script = file("${project.buildDir}/node/node_modules/webpack/bin/webpack.js")
  	 args = ['--config', "${project.buildDir}/node/webpack.config.js"]
}

task copy_loginsites(type: Copy) {
	from 	"${project.buildDir}/node/login.jsp", 
			"${project.buildDir}/node/login.css", 
			"${project.buildDir}/node/error.jsp"
			
	into	 "${project.buildDir}/node/dist"
}

compileJava.dependsOn(copy_loginsites)
copy_loginsites.dependsOn(webpack)
webpack.dependsOn(npmInstall)
npmInstall.dependsOn(copy_websources)
copy_websources.dependsOn(npmSetup)
npmSetup.dependsOn(nodeSetup)



