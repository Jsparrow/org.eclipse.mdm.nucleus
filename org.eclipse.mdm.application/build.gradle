/*******************************************************************************
 * Copyright (c) 2016 Gigatronik Ingolstadt GmbH
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * Sebastian Dirsch - initial configuration
 *******************************************************************************/ 

import org.apache.tools.ant.taskdefs.condition.Os
description = 'MDM Web Application'
version = '1.0.0'
apply plugin: 'com.moowork.node'

System.setProperty('file.encoding', 'UTF-8')


task map_tslint(type: Copy) {
	File tsLintFile = file("${project.buildDir}/node/coverage/tslint_out.json")
	File mappedTsLintFile = file("${project.buildDir}/node/coverage/tslint_out_mapped.json")
	
	String contents = tsLintFile.getText('UTF-8') 
	contents = contents.replaceAll( 'app', 'src/main/webapp/app' )
	mappedTsLintFile.write(contents, 'UTF-8')
}

sonarqube {
    properties {
        property "sonar.sources", "src/main/webapp,src/main/java"
        property "sonar.exclusions", "src/main/webapp/node_modules/**, src/main/webapp/coverage/**, src/main/webapp/dist/**,**/*.spec.ts, **/*.js"
        property "sonar.tests", "src/main/webapp"
		property "sonar.test.inclusions", "**/*.spec.ts"
		
		property "sonar.ts.tslint.configPath", "src/main/webapp"
		property "sonar.ts.tslint.projectPath", "src/main/webapp"
        property "sonar.ts.tslint.outputPath", "${project.buildDir}/node/coverage/tslint_out_mapped.json"
        property "sonar.ts.coverage.lcovReportpath", "${project.buildDir}/node/coverage/lcov/lcov.info"
    }
}

dependencies {

	runtime 'org.glassfish.jersey.containers:jersey-container-servlet:2.15'
	runtime 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.1'

	compile project(':org.eclipse.mdm.businessobjects')
	compile project(':org.eclipse.mdm.filerelease')
	compile project(':org.eclipse.mdm.property')	
	compile project(':org.eclipse.mdm.freetextindexer')	
	compile project(':org.eclipse.mdm.preferences')	
}

buildscript {
	repositories { 
		maven { 
			url "https://plugins.gradle.org/m2/" 
		} 
	}
	dependencies { 
		classpath "com.moowork.gradle:gradle-node-plugin:1.0.1" 
	}
}


task copy_websources(type: Copy) {

	from('./src/main/webapp') {
		exclude 'dist'
		exclude 'node_modules'
	}
	
	into "${project.buildDir}/node"
}


node {
	version = '6.9.4'
	npmVersion = '3.10.10'
	distBaseUrl = 'https://nodejs.org/dist'
	download = true
	workDir = file("${project.buildDir}/node/nodejs")
	npmWorkDir = file("${project.buildDir}/node")
	nodeModulesDir = file("${project.buildDir}/node")
	if (!nodeModulesDir.isDirectory()) {
		nodeModulesDir.mkdirs()
	}
}
npm_install {
	args = ["${project.buildDir}"]
}

task runBuild(type: NpmTask) {
    args = ['run', 'build']
}

task copy_loginsites(type: Copy) {
	from 	"${project.buildDir}/node/login.jsp", 
			"${project.buildDir}/node/login.css", 
			"${project.buildDir}/node/error.jsp"
			
	into	 "${project.buildDir}/node/dist"
}

compileJava.dependsOn(copy_loginsites)
map_tslint.dependsOn(runBuild)
copy_loginsites.dependsOn(runBuild)
runBuild.dependsOn(npmInstall)
npmInstall.dependsOn(copy_websources)
copy_websources.dependsOn(npmSetup)
npmSetup.dependsOn(nodeSetup)



